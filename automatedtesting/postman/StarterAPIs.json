{
	"info": {
		"_postman_id": "fd796652-31c0-4ffa-8954-2224b0e43378",
		"name": "Starter APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Create employee\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"name\"));",
							"});",
							"",
							"var json = pm.response.json();",
							"pm.environment.set(\"myid\", json.data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"salary\": \"{{salary}}\",\n    \"age\": \"{{age}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Get all employees\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employees",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test updated data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.name).to.eql(pm.environment.get(\"newname\"));\r",
							"    pm.expect(jsonData.data.salary).to.eql(pm.environment.get(\"newsalary\"));\r",
							"    pm.expect(jsonData.data.age).to.eql(pm.environment.get(\"newage\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{newname}}\",\r\n    \"salary\": \"{{newsalary}}\",\r\n    \"age\": \"{{newage}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/update/{{myid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"update",
						"{{myid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(parseInt(pm.environment.get(\"myid\")));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employee/{{myid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						"{{myid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(parseInt(jsonData.data)).to.eql(pm.environment.get(\"myid\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/delete/{{myid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"delete",
						"{{myid}}"
					]
				}
			},
			"response": []
		}
	]
}